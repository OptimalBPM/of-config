{
  "description": "Optimal BPM",
  "web": {
    "server": [
      {
      "module": "process",
      "path": "process",
      "class": "CherryPyProcess"
      },
      {
      "module": "control",
      "path": "control",
      "class": "CherryPyControl"
      }
    ],
    "client": {
      "mountpoint": "/process",
      "controllers": [
        {
          "name": "ProcessController",
          "module": "process/controllers/process",
          "dependencies": [
            "$scope",
            "$http",
            "$q",
            "$timeout"
          ]
        },
        {
          "name": "ControlController",
          "module": "process/controllers/control",
          "dependencies": [
            "$scope",
            "$http",
            "$cookies",
            "$interval"
          ]
        }
      ],
      "directives": [
        {
          "name": "process",
          "module": "process/directives/process"
        },
        {
          "name": "control",
          "module": "process/directives/control"
        }
      ],
      "routes": [
        {
          "path": "/process",
          "route": {
            "templateUrl": "process/views/process.html"
          }
        },
        {
          "path": "/control",
          "route": {
            "templateUrl": "process/views/control.html"
          }
        }
      ]
      ,
      "menus": [
        {
          "caption": "CONTROL",
          "weight": 0.4,
          "path": "/control",
          "items": [],
          "right": "Administer"
        },
        {
          "caption": "DESIGN",
          "weight": 0.5,
          "path": "/process",
          "items": [],
          "right": "Administer"
        }
        ]
    }
  },
  "namespaces": {
    "process": {
      "meta": {
        "description": "Process",
        "title": "Process"
      },
      "functions": {
        "query": {
          "meta": {
            "title": "query <i>%parameters%</i>",
            "description": "Query and join one or more data sources, return a structure that can return an SQL to run<div class='alert alert-info'>Supported datasets: RDBMS, XML, HTML, Excel and csv-files.</div>"
          },
          "parameters": [
            {
              "key": "statement",
              "type": "complex",
              "schemaId": "7e9ce2cd-ec44-4cd0-8b93-7f3901c979e1",
              "title": "Query statement",
              "description": "A structure that defines the query statement, see schemas/sql.json. Returns a QAL dataset.",
              "output": false
            }
          ]
        },
        "merge_datasets": {
          "meta": {
            "title": "merge <i>%parameters%</i>",
            "description": "Merge a source QAL dataset into a destination QAL dataset.<div class='alert alert-info'>Used to transform and to merge datasets vertically (as opposed to joins)</div>"
          },
          "parameters": [
            {
              "key": "merge",
              "type": "complex",
              "schemaId": "7e9ce2cd-ec44-4cd0-8b93-7f3901c979e1",
              "title": "Merge",
              "description": "A structure that defines the m, see schemas/sql.json. Returns a QAL dataset.",
              "output": false
            }
          ]
        },
        "open_dataset": {
          "meta": {
            "title": "open dataset <i>%parameters%</i>",
            "description": "Returns an open dataset."
          },
          "parameters": [
            {
              "key": "resource",
              "type": "complex",
              "title": "Resource information",
              "description": "Settings for the dataset",
              "output": false
            }
          ]
        }
      }
    }
  }
}